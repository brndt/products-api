version: '3.7'
services:

  ecommerce-php:
    build:
      ./etc/php
    container_name: ecommerce-php
    volumes:
      - ./:/var/www/html
    networks:
      - ecommerce-network

  ecommerce-mysql:
    image: mysql:5.7
    platform: linux/amd64
    container_name: ecommerce-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${ECOMMERCE_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${ECOMMERCE_DATABASE_NAME}
      MYSQL_USER: ${ECOMMERCE_DATABASE_USER}
      MYSQL_PASSWORD: ${ECOMMERCE_DATABASE_PASSWORD}
    volumes:
      - ./etc/mysql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    networks:
      - ecommerce-network

  ecommerce-nginx:
    image: nginx:alpine
    container_name: ecommerce-nginx
    restart: unless-stopped
    tty: true
    ports: [ "80:80" ]
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:cached
      - ./etc/nginx/conf.d/:/etc/nginx/conf.d/:cached
    networks:
      - ecommerce-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  ecommerce-network:
    driver: bridge
volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
